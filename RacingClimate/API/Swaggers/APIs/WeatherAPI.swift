//
// WeatherAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire



open class WeatherAPI {
    /**
     Get current weather by city
     
     - parameter _id: (query) City ID of the query. 
     - parameter units: (query) Temperature unit. 
     - parameter APPID: (query) Open Weather Map App ID. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func currentWeatherByCity(_id: String, units: String, APPID: String, completion: @escaping ((_ data: Info?,_ error: Error?) -> Void)) {
        currentWeatherByCityWithRequestBuilder(_id: _id, units: units, APPID: APPID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get current weather by city
     - GET /weather
     - examples: [{contentType=application/json, example={
  "dt" : 4,
  "visibility" : 7,
  "weather" : [ {
    "icon" : "icon",
    "description" : "description",
    "main" : "main",
    "id" : 0.80082819046101150206595775671303272247314453125
  }, {
    "icon" : "icon",
    "description" : "description",
    "main" : "main",
    "id" : 0.80082819046101150206595775671303272247314453125
  } ],
  "name" : "name",
  "main" : {
    "temp" : 6.02745618307040320615897144307382404804229736328125,
    "temp_min" : 5.63737665663332876420099637471139430999755859375,
    "humidity" : 5,
    "pressure" : 1.46581298050294517310021547018550336360931396484375,
    "temp_max" : 2.3021358869347654518833223846741020679473876953125
  },
  "clouds" : {
    "all" : 2
  },
  "sys" : {
    "country" : "country",
    "sunrise" : 1,
    "sunset" : 6,
    "id" : 1,
    "type" : 7,
    "message" : 1.024645700144157789424070870154537260532379150390625
  },
  "wind" : {
    "deg" : 3.61607674925191080461672754609026014804840087890625,
    "speed" : 9.301444243932575517419536481611430644989013671875
  }
}}]
     
     - parameter _id: (query) City ID of the query. 
     - parameter units: (query) Temperature unit. 
     - parameter APPID: (query) Open Weather Map App ID. 

     - returns: RequestBuilder<Info> 
     */
    open class func currentWeatherByCityWithRequestBuilder(_id: String, units: String, APPID: String) -> RequestBuilder<Info> {
        let path = "/weather"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "units": units, 
            "APPID": APPID
        ])

        let requestBuilder: RequestBuilder<Info>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

    /**
     Get forecast weather by city
     
     - parameter _id: (query) City ID of the query. 
     - parameter units: (query) Temperature unit. 
     - parameter APPID: (query) Open Weather Map App ID. 
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func forecastWeatherByCity(_id: String, units: String, APPID: String, completion: @escaping ((_ data: Forecast?,_ error: Error?) -> Void)) {
        forecastWeatherByCityWithRequestBuilder(_id: _id, units: units, APPID: APPID).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }


    /**
     Get forecast weather by city
     - GET /forecast
     - examples: [{contentType=application/json, example={
  "list" : [ {
    "dt" : 4,
    "visibility" : 7,
    "weather" : [ {
      "icon" : "icon",
      "description" : "description",
      "main" : "main",
      "id" : 0.80082819046101150206595775671303272247314453125
    }, {
      "icon" : "icon",
      "description" : "description",
      "main" : "main",
      "id" : 0.80082819046101150206595775671303272247314453125
    } ],
    "name" : "name",
    "main" : {
      "temp" : 6.02745618307040320615897144307382404804229736328125,
      "temp_min" : 5.63737665663332876420099637471139430999755859375,
      "humidity" : 5,
      "pressure" : 1.46581298050294517310021547018550336360931396484375,
      "temp_max" : 2.3021358869347654518833223846741020679473876953125
    },
    "clouds" : {
      "all" : 2
    },
    "sys" : {
      "country" : "country",
      "sunrise" : 1,
      "sunset" : 6,
      "id" : 1,
      "type" : 7,
      "message" : 1.024645700144157789424070870154537260532379150390625
    },
    "wind" : {
      "deg" : 3.61607674925191080461672754609026014804840087890625,
      "speed" : 9.301444243932575517419536481611430644989013671875
    }
  }, {
    "dt" : 4,
    "visibility" : 7,
    "weather" : [ {
      "icon" : "icon",
      "description" : "description",
      "main" : "main",
      "id" : 0.80082819046101150206595775671303272247314453125
    }, {
      "icon" : "icon",
      "description" : "description",
      "main" : "main",
      "id" : 0.80082819046101150206595775671303272247314453125
    } ],
    "name" : "name",
    "main" : {
      "temp" : 6.02745618307040320615897144307382404804229736328125,
      "temp_min" : 5.63737665663332876420099637471139430999755859375,
      "humidity" : 5,
      "pressure" : 1.46581298050294517310021547018550336360931396484375,
      "temp_max" : 2.3021358869347654518833223846741020679473876953125
    },
    "clouds" : {
      "all" : 2
    },
    "sys" : {
      "country" : "country",
      "sunrise" : 1,
      "sunset" : 6,
      "id" : 1,
      "type" : 7,
      "message" : 1.024645700144157789424070870154537260532379150390625
    },
    "wind" : {
      "deg" : 3.61607674925191080461672754609026014804840087890625,
      "speed" : 9.301444243932575517419536481611430644989013671875
    }
  } ]
}}]
     
     - parameter _id: (query) City ID of the query. 
     - parameter units: (query) Temperature unit. 
     - parameter APPID: (query) Open Weather Map App ID. 

     - returns: RequestBuilder<Forecast> 
     */
    open class func forecastWeatherByCityWithRequestBuilder(_id: String, units: String, APPID: String) -> RequestBuilder<Forecast> {
        let path = "/forecast"
        let URLString = SwaggerClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "id": _id, 
            "units": units, 
            "APPID": APPID
        ])

        let requestBuilder: RequestBuilder<Forecast>.Type = SwaggerClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
